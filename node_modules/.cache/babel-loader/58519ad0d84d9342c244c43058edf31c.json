{"ast":null,"code":"export default `\n\nvarying vec2 vUv;\n#define PI 3.1415926535897932384626433832795\n\n// vec2 rotate(vec2 uv, float rotation, vec2 mid) {\n//     return vec3(cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x, cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y);\n// }\n\nvec2 rotate(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\n\nvoid main()\n\n{\n\n    float pi = 3.1415926535897932384626433832795;\n    vec3 blackColor = vec3(0.0);\n    vec3 uvColor = vec3(vUv, 1.0);\n\n\n    vec2 rotatedUv = rotate(vUv, 0.8, vec2(0.5));\n\n    vec2 lightUvX = vec2(rotatedUv.x * 0.1 + 0.45, rotatedUv.y * 0.5 + 0.25);\n    float lightX = 0.015 / distance(lightUvX, vec2(0.5));\n\n    vec2 lightUvY = vec2(rotatedUv.y * 0.1 + 0.45, rotatedUv.x * 0.5 + 0.25);\n    float lightY = 0.015 / distance(lightUvY, vec2(0.5));\n\n\n    float strength = lightX * lightY;\n    vec3 mixedColor = mix(blackColor, uvColor, strength);\n\n    gl_FragColor = vec4(mixedColor, 1.0);\n}\n`;","map":{"version":3,"names":[],"sources":["/Users/erachlin/pandemicProject/src/shaders/fragment.js"],"sourcesContent":["export default `\n\nvarying vec2 vUv;\n#define PI 3.1415926535897932384626433832795\n\n// vec2 rotate(vec2 uv, float rotation, vec2 mid) {\n//     return vec3(cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x, cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y);\n// }\n\nvec2 rotate(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\n\nvoid main()\n\n{\n\n    float pi = 3.1415926535897932384626433832795;\n    vec3 blackColor = vec3(0.0);\n    vec3 uvColor = vec3(vUv, 1.0);\n\n\n    vec2 rotatedUv = rotate(vUv, 0.8, vec2(0.5));\n\n    vec2 lightUvX = vec2(rotatedUv.x * 0.1 + 0.45, rotatedUv.y * 0.5 + 0.25);\n    float lightX = 0.015 / distance(lightUvX, vec2(0.5));\n\n    vec2 lightUvY = vec2(rotatedUv.y * 0.1 + 0.45, rotatedUv.x * 0.5 + 0.25);\n    float lightY = 0.015 / distance(lightUvY, vec2(0.5));\n\n\n    float strength = lightX * lightY;\n    vec3 mixedColor = mix(blackColor, uvColor, strength);\n\n    gl_FragColor = vec4(mixedColor, 1.0);\n}\n`;\n"],"mappings":"AAAA,eAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzCA"},"metadata":{},"sourceType":"module"}