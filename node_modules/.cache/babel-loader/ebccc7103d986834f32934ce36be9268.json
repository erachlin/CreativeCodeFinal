{"ast":null,"code":"var _jsxFileName = \"/Users/erachlin/pandemicProject/src/Experience.js\",\n    _s = $RefreshSig$();\n\nimport { OrbitControls, useTexture, shaderMaterial } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nimport starVertexShader from \"./shaders/vertex.js\";\nimport starFragmentShader from \"./shaders/fragment.js\";\nimport { extend } from \"@react-three/fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StarMaterial = shaderMaterial({}, starVertexShader, starFragmentShader);\nextend({\n  StarMaterial\n});\nexport default function Experience() {\n  _s();\n\n  const props = useTexture({\n    map: \"earthMap.jpg\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [1, 32, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), [...Array(100)].map(() => /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [(Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10],\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [1, 1, 32, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"starMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s(Experience, \"b2B90cy03dulQ2woqB7nXHKKARo=\", false, function () {\n  return [useTexture];\n});\n\n_c = Experience;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["OrbitControls","useTexture","shaderMaterial","THREE","TextureLoader","starVertexShader","starFragmentShader","extend","StarMaterial","Experience","props","map","Array","Math","random"],"sources":["/Users/erachlin/pandemicProject/src/Experience.js"],"sourcesContent":["import { OrbitControls, useTexture, shaderMaterial } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nimport starVertexShader from \"./shaders/vertex.js\";\nimport starFragmentShader from \"./shaders/fragment.js\";\nimport { extend } from \"@react-three/fiber\";\n\nconst StarMaterial = shaderMaterial({}, starVertexShader, starFragmentShader);\n\nextend({ StarMaterial });\n\nexport default function Experience() {\n  const props = useTexture({ map: \"earthMap.jpg\" });\n\n  return (\n    <>\n      <OrbitControls />\n\n      <ambientLight intensity={0.2} />\n      <directionalLight />\n      <mesh>\n        <sphereGeometry args={[1, 32, 32]} />\n        <meshStandardMaterial {...props} />\n      </mesh>\n\n      {[...Array(100)].map(() => (\n        <mesh\n          position={[\n            (Math.random() - 0.5) * 10,\n            (Math.random() - 0.5) * 10,\n            (Math.random() - 0.5) * 10,\n          ]}\n        >\n          <planeGeometry args={[1, 1, 32, 32]} />\n          <starMaterial />\n        </mesh>\n      ))}\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,cAApC,QAA0D,mBAA1D;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,SAASC,MAAT,QAAuB,oBAAvB;;;AAEA,MAAMC,YAAY,GAAGN,cAAc,CAAC,EAAD,EAAKG,gBAAL,EAAuBC,kBAAvB,CAAnC;AAEAC,MAAM,CAAC;EAAEC;AAAF,CAAD,CAAN;AAEA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EACnC,MAAMC,KAAK,GAAGT,UAAU,CAAC;IAAEU,GAAG,EAAE;EAAP,CAAD,CAAxB;EAEA,oBACE;IAAA,wBACE,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAc,SAAS,EAAE;IAAzB;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA,wBACE;QAAgB,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR;MAAtB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,qCAA0BD;MAA1B;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,EAUG,CAAC,GAAGE,KAAK,CAAC,GAAD,CAAT,EAAgBD,GAAhB,CAAoB,mBACnB;MACE,QAAQ,EAAE,CACR,CAACE,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAwB,EADhB,EAER,CAACD,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAwB,EAFhB,EAGR,CAACD,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAwB,EAHhB,CADZ;MAAA,wBAOE;QAAe,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX;MAArB;QAAA;QAAA;QAAA;MAAA,QAPF,eAQE;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,CAVH;EAAA,gBADF;AAyBD;;GA5BuBL,U;UACRR,U;;;KADQQ,U"},"metadata":{},"sourceType":"module"}