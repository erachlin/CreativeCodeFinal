{"ast":null,"code":"var _jsxFileName = \"/Users/erachlin/pandemicProject/src/Experience.js\",\n    _s = $RefreshSig$();\n\nimport { OrbitControls, useTexture, shaderMaterial } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nimport starVertexShader from \"./shaders/starVertex.js\";\nimport starFragmentShader from \"./shaders/starFragment.js\";\nimport sphereShader from \"./shaders/sphereShader.js\";\nimport sphereVertex from \"./shaders/sphereVertex.js\";\nimport artistFragment from \"./shaders/artistFragment.js\";\nimport artistVertex from \"./shaders/artistVertex.js\";\nimport { extend, useFrame } from \"@react-three/fiber\";\nimport { useRef } from \"react\";\nimport { useControls } from \"leva\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StarMaterial = shaderMaterial({}, starVertexShader, starFragmentShader);\nconst GradientMaterial = shaderMaterial({\n  uTime: 0\n}, sphereVertex, sphereShader);\nconst ArtistMaterial = shaderMaterial({\n  uTime: 0\n}, artistVertex, artistFragment); //40.00789901806392, -105.27000601728639\n\nlet lat1 = 40.00789901806392 * (Math.PI / 180);\nlet lng1 = -105.27000601728639 * (Math.PI / 180);\nlet x1 = Math.cos(lat1) * Math.sin(lng1);\nlet y1 = Math.sin(lat1);\nlet z1 = Math.cos(lat1) * Math.cos(lng1); // 28.615205932605956, 77.27145735512924\n// let lat2 = 28.615205932605956 * (Math.PI / 180);\n// let lng2 = 77.27145735512924 * (Math.PI / 180);\n// 5.602651029866165, -0.18745686785037963\n\nlet lat2 = 5.60265102986616 * (Math.PI / 180);\nlet lng2 = -0.18745686785037963 * (Math.PI / 180);\nlet x2 = Math.cos(lat2) * Math.sin(lng2);\nlet y2 = Math.sin(lat2);\nlet z2 = Math.cos(lat2) * Math.cos(lng2);\nlet boulder = converttoCartesian(40.00789901806392, -105.27000601728639);\nlet dehli = converttoCartesian(28.615205932605956, 77.27145735512924);\nlet accara = converttoCartesian(5.602651029866165, -0.18745686785037963);\nlet annapolis = converttoCartesian(38.98317612737906, -76.48688895532207);\nlet maywood = converttoCartesian(40.902693730363886, -74.06075771798712);\nlet sevilla = converttoCartesian(37.39062703943369, -5.983899466749108);\nlet rosario = converttoCartesian(-32.9602559294061, -60.69423846725374);\nlet chiba = converttoCartesian(35.22679040959066, 140.15967057878936);\n\nfunction converttoCartesian(lat, lng) {\n  lat *= Math.PI / 180;\n  lng *= Math.PI / 180;\n  return {\n    x: Math.cos(lat) * Math.sin(lng),\n    y: Math.sin(lat),\n    z: Math.cos(lat) * Math.cos(lng)\n  };\n}\n\nfunction getCurve(p1, p2) {\n  let v1 = new THREE.Vector3(p1.x, p1.y, p1.z);\n  let v2 = new THREE.Vector3(p2.x, p2.y, p2.z);\n  let points = [];\n\n  for (let i = 0; i < 20; i++) {\n    let p = new THREE.Vector3().lerpVectors(v1, v2, i / 20);\n    p.normalize();\n    p.multiplyScalar(1 + 0.1 * Math.sin(Math.PI * i / 20));\n    points.push(p);\n  }\n\n  let path = new THREE.CatmullRomCurve3(points);\n  return path;\n}\n\nlet accaraCurve = getCurve(boulder, accara);\nlet dehliCurve = getCurve(boulder, dehli);\nlet annapolisCurve = getCurve(boulder, annapolis);\nlet maywoodCurve = getCurve(boulder, maywood);\nlet sevillaCurve = getCurve(boulder, sevilla);\nlet rosarioCurve = getCurve(boulder, rosario);\nlet chibaCurve = getCurve(boulder, chiba);\nextend({\n  StarMaterial,\n  GradientMaterial,\n  ArtistMaterial\n});\n\nfunction getRandom(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport default function Experience() {\n  _s();\n\n  const props = useTexture({\n    map: \"earthMap.jpg\"\n  });\n  props.map.wrapS = THREE.RepeatWrapping; // You do not need to set `.wrapT` in this case\n\n  props.map.offset.x = 1.5708 / (2 * Math.PI); //const ref0 = useRef();\n\n  const ref1 = useRef();\n  const ref2 = useRef();\n  const ref3 = useRef();\n  const ref4 = useRef();\n  const ref5 = useRef();\n  const ref6 = useRef();\n  const ref7 = useRef();\n  const ref8 = useRef();\n  useFrame(_ref => {\n    let {\n      clock\n    } = _ref;\n    return ref1.current.uTime = clock.getElapsedTime();\n  });\n  useFrame(_ref2 => {\n    let {\n      clock\n    } = _ref2;\n    return ref2.current.uTime = clock.getElapsedTime();\n  });\n  useFrame(_ref3 => {\n    let {\n      clock\n    } = _ref3;\n    return ref3.current.uTime = clock.getElapsedTime();\n  });\n  useFrame(_ref4 => {\n    let {\n      clock\n    } = _ref4;\n    return ref4.current.uTime = clock.getElapsedTime();\n  });\n  useFrame(_ref5 => {\n    let {\n      clock\n    } = _ref5;\n    return ref5.current.uTime = clock.getElapsedTime();\n  });\n  useFrame(_ref6 => {\n    let {\n      clock\n    } = _ref6;\n    return ref6.current.uTime = clock.getElapsedTime();\n  });\n  useFrame(_ref7 => {\n    let {\n      clock\n    } = _ref7;\n    return ref7.current.uTime = clock.getElapsedTime();\n  });\n  useFrame(_ref8 => {\n    let {\n      clock\n    } = _ref8;\n    return ref8.current.uTime = clock.getElapsedTime();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [1, 32, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [accara.x, accara.y, accara.z],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [0.015, 8, 8]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"gradientMaterial\", {\n        ref: ref1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [boulder.x, boulder.y, boulder.z],\n      rotation: [0, Math.PI / 2, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [0.015, 8, 8]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"artistMaterial\", {\n        ref: ref2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [dehli.x, dehli.y, dehli.z],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [0.015, 8, 8]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"gradientMaterial\", {\n        ref: ref3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [annapolis.x, annapolis.y, annapolis.z],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [0.015, 8, 8]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"gradientMaterial\", {\n        ref: ref4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [maywood.x, maywood.y, maywood.z],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [0.015, 8, 8]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"gradientMaterial\", {\n        ref: ref5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [sevilla.x, sevilla.y, sevilla.z],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [0.015, 8, 8]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"gradientMaterial\", {\n        ref: ref6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [rosario.x, rosario.y, rosario.z],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [0.015, 8, 8]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"gradientMaterial\", {\n        ref: ref7\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [chiba.x, chiba.y, chiba.z],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [0.015, 8, 8]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"gradientMaterial\", {\n        ref: ref8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tubeGeometry\", {\n        args: [accaraCurve, 20, 0.002, 8, false]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tubeGeometry\", {\n        args: [dehliCurve, 20, 0.002, 8, false]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tubeGeometry\", {\n        args: [annapolisCurve, 20, 0.0015, 8, false]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tubeGeometry\", {\n        args: [maywoodCurve, 20, 0.0015, 8, false]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tubeGeometry\", {\n        args: [sevillaCurve, 20, 0.002, 8, false]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tubeGeometry\", {\n        args: [rosarioCurve, 20, 0.002, 8, false]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tubeGeometry\", {\n        args: [chibaCurve, 20, 0.002, 8, false]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), [...Array(400)].map(() => /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [(Math.random() - 0.5) * 50, (Math.random() - 0.5) * 50, (Math.random() - 0.5) * 50],\n      rotation: [getRandom(0, Math.PI * 2), getRandom(0, Math.PI * 2), getRandom(0, Math.PI * 2)],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [0.1, 32, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"starMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n} // export default function ExampleComponent() {\n//   const props =  ;\n//   return (\n//     <>\n//     </>\n//   );\n// }\n\n_s(Experience, \"eZLFYdrXD9i1HIhYdKfXKCX3jXA=\", false, function () {\n  return [useTexture, useFrame, useFrame, useFrame, useFrame, useFrame, useFrame, useFrame, useFrame];\n});\n\n_c = Experience;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["OrbitControls","useTexture","shaderMaterial","THREE","TextureLoader","starVertexShader","starFragmentShader","sphereShader","sphereVertex","artistFragment","artistVertex","extend","useFrame","useRef","useControls","StarMaterial","GradientMaterial","uTime","ArtistMaterial","lat1","Math","PI","lng1","x1","cos","sin","y1","z1","lat2","lng2","x2","y2","z2","boulder","converttoCartesian","dehli","accara","annapolis","maywood","sevilla","rosario","chiba","lat","lng","x","y","z","getCurve","p1","p2","v1","Vector3","v2","points","i","p","lerpVectors","normalize","multiplyScalar","push","path","CatmullRomCurve3","accaraCurve","dehliCurve","annapolisCurve","maywoodCurve","sevillaCurve","rosarioCurve","chibaCurve","getRandom","min","max","random","Experience","props","map","wrapS","RepeatWrapping","offset","ref1","ref2","ref3","ref4","ref5","ref6","ref7","ref8","clock","current","getElapsedTime","Array"],"sources":["/Users/erachlin/pandemicProject/src/Experience.js"],"sourcesContent":["import { OrbitControls, useTexture, shaderMaterial } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nimport starVertexShader from \"./shaders/starVertex.js\";\nimport starFragmentShader from \"./shaders/starFragment.js\";\nimport sphereShader from \"./shaders/sphereShader.js\";\nimport sphereVertex from \"./shaders/sphereVertex.js\";\nimport artistFragment from \"./shaders/artistFragment.js\";\nimport artistVertex from \"./shaders/artistVertex.js\";\nimport { extend, useFrame } from \"@react-three/fiber\";\nimport { useRef } from \"react\";\nimport { useControls } from \"leva\";\n\nconst StarMaterial = shaderMaterial({}, starVertexShader, starFragmentShader);\n\nconst GradientMaterial = shaderMaterial(\n  { uTime: 0 },\n  sphereVertex,\n  sphereShader\n);\n\nconst ArtistMaterial = shaderMaterial(\n  { uTime: 0 },\n  artistVertex,\n  artistFragment\n);\n\n//40.00789901806392, -105.27000601728639\n\nlet lat1 = 40.00789901806392 * (Math.PI / 180);\nlet lng1 = -105.27000601728639 * (Math.PI / 180);\n\nlet x1 = Math.cos(lat1) * Math.sin(lng1);\nlet y1 = Math.sin(lat1);\nlet z1 = Math.cos(lat1) * Math.cos(lng1);\n\n// 28.615205932605956, 77.27145735512924\n\n// let lat2 = 28.615205932605956 * (Math.PI / 180);\n// let lng2 = 77.27145735512924 * (Math.PI / 180);\n\n// 5.602651029866165, -0.18745686785037963\n\nlet lat2 = 5.60265102986616 * (Math.PI / 180);\nlet lng2 = -0.18745686785037963 * (Math.PI / 180);\n\nlet x2 = Math.cos(lat2) * Math.sin(lng2);\nlet y2 = Math.sin(lat2);\nlet z2 = Math.cos(lat2) * Math.cos(lng2);\n\nlet boulder = converttoCartesian(40.00789901806392, -105.27000601728639);\n\nlet dehli = converttoCartesian(28.615205932605956, 77.27145735512924);\n\nlet accara = converttoCartesian(5.602651029866165, -0.18745686785037963);\n\nlet annapolis = converttoCartesian(38.98317612737906, -76.48688895532207);\n\nlet maywood = converttoCartesian(40.902693730363886, -74.06075771798712);\n\nlet sevilla = converttoCartesian(37.39062703943369, -5.983899466749108);\n\nlet rosario = converttoCartesian(-32.9602559294061, -60.69423846725374);\n\nlet chiba = converttoCartesian(35.22679040959066, 140.15967057878936);\n\nfunction converttoCartesian(lat, lng) {\n  lat *= Math.PI / 180;\n  lng *= Math.PI / 180;\n\n  return {\n    x: Math.cos(lat) * Math.sin(lng),\n    y: Math.sin(lat),\n    z: Math.cos(lat) * Math.cos(lng),\n  };\n}\n\nfunction getCurve(p1, p2) {\n  let v1 = new THREE.Vector3(p1.x, p1.y, p1.z);\n  let v2 = new THREE.Vector3(p2.x, p2.y, p2.z);\n  let points = [];\n  for (let i = 0; i < 20; i++) {\n    let p = new THREE.Vector3().lerpVectors(v1, v2, i / 20);\n    p.normalize();\n    p.multiplyScalar(1 + 0.1 * Math.sin((Math.PI * i) / 20));\n    points.push(p);\n  }\n\n  let path = new THREE.CatmullRomCurve3(points);\n  return path;\n}\n\nlet accaraCurve = getCurve(boulder, accara);\nlet dehliCurve = getCurve(boulder, dehli);\nlet annapolisCurve = getCurve(boulder, annapolis);\nlet maywoodCurve = getCurve(boulder, maywood);\nlet sevillaCurve = getCurve(boulder, sevilla);\nlet rosarioCurve = getCurve(boulder, rosario);\nlet chibaCurve = getCurve(boulder, chiba);\n\nextend({ StarMaterial, GradientMaterial, ArtistMaterial });\n\nfunction getRandom(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport default function Experience() {\n  const props = useTexture({ map: \"earthMap.jpg\" });\n\n  props.map.wrapS = THREE.RepeatWrapping; // You do not need to set `.wrapT` in this case\n  props.map.offset.x = 1.5708 / (2 * Math.PI);\n\n  //const ref0 = useRef();\n\n  const ref1 = useRef();\n\n  const ref2 = useRef();\n\n  const ref3 = useRef();\n\n  const ref4 = useRef();\n\n  const ref5 = useRef();\n\n  const ref6 = useRef();\n\n  const ref7 = useRef();\n\n  const ref8 = useRef();\n\n  useFrame(({ clock }) => (ref1.current.uTime = clock.getElapsedTime()));\n\n  useFrame(({ clock }) => (ref2.current.uTime = clock.getElapsedTime()));\n\n  useFrame(({ clock }) => (ref3.current.uTime = clock.getElapsedTime()));\n\n  useFrame(({ clock }) => (ref4.current.uTime = clock.getElapsedTime()));\n\n  useFrame(({ clock }) => (ref5.current.uTime = clock.getElapsedTime()));\n\n  useFrame(({ clock }) => (ref6.current.uTime = clock.getElapsedTime()));\n\n  useFrame(({ clock }) => (ref7.current.uTime = clock.getElapsedTime()));\n\n  useFrame(({ clock }) => (ref8.current.uTime = clock.getElapsedTime()));\n\n  return (\n    <>\n      <OrbitControls />\n\n      <ambientLight intensity={0.2} />\n      <directionalLight />\n      <mesh>\n        <sphereGeometry args={[1, 32, 32]} />\n        <meshStandardMaterial {...props} />\n      </mesh>\n      <mesh position={[accara.x, accara.y, accara.z]}>\n        <sphereGeometry args={[0.015, 8, 8]} />\n        <gradientMaterial ref={ref1} />\n      </mesh>\n      <mesh\n        position={[boulder.x, boulder.y, boulder.z]}\n        rotation={[0, Math.PI / 2, 0]}\n      >\n        <sphereGeometry args={[0.015, 8, 8]} />\n        <artistMaterial ref={ref2} />\n      </mesh>\n      <mesh position={[dehli.x, dehli.y, dehli.z]}>\n        <sphereGeometry args={[0.015, 8, 8]} />\n        <gradientMaterial ref={ref3} />\n      </mesh>\n      <mesh position={[annapolis.x, annapolis.y, annapolis.z]}>\n        <sphereGeometry args={[0.015, 8, 8]} />\n        <gradientMaterial ref={ref4} />\n      </mesh>\n      <mesh position={[maywood.x, maywood.y, maywood.z]}>\n        <sphereGeometry args={[0.015, 8, 8]} />\n        <gradientMaterial ref={ref5} />\n      </mesh>\n      <mesh position={[sevilla.x, sevilla.y, sevilla.z]}>\n        <sphereGeometry args={[0.015, 8, 8]} />\n        <gradientMaterial ref={ref6} />\n      </mesh>\n      <mesh position={[rosario.x, rosario.y, rosario.z]}>\n        <sphereGeometry args={[0.015, 8, 8]} />\n        <gradientMaterial ref={ref7} />\n      </mesh>\n      <mesh position={[chiba.x, chiba.y, chiba.z]}>\n        <sphereGeometry args={[0.015, 8, 8]} />\n        <gradientMaterial ref={ref8} />\n      </mesh>\n\n      <mesh>\n        <tubeGeometry args={[accaraCurve, 20, 0.002, 8, false]} />\n        <meshBasicMaterial />\n      </mesh>\n      <mesh>\n        <tubeGeometry args={[dehliCurve, 20, 0.002, 8, false]} />\n        <meshBasicMaterial />\n      </mesh>\n      <mesh>\n        <tubeGeometry args={[annapolisCurve, 20, 0.0015, 8, false]} />\n        <meshBasicMaterial />\n      </mesh>\n      <mesh>\n        <tubeGeometry args={[maywoodCurve, 20, 0.0015, 8, false]} />\n        <meshBasicMaterial />\n      </mesh>\n      <mesh>\n        <tubeGeometry args={[sevillaCurve, 20, 0.002, 8, false]} />\n        <meshBasicMaterial />\n      </mesh>\n      <mesh>\n        <tubeGeometry args={[rosarioCurve, 20, 0.002, 8, false]} />\n        <meshBasicMaterial />\n      </mesh>\n      <mesh>\n        <tubeGeometry args={[chibaCurve, 20, 0.002, 8, false]} />\n        <meshBasicMaterial />\n      </mesh>\n\n      {[...Array(400)].map(() => (\n        <mesh\n          position={[\n            (Math.random() - 0.5) * 50,\n            (Math.random() - 0.5) * 50,\n            (Math.random() - 0.5) * 50,\n          ]}\n          rotation={[\n            getRandom(0, Math.PI * 2),\n            getRandom(0, Math.PI * 2),\n            getRandom(0, Math.PI * 2),\n          ]}\n        >\n          <sphereGeometry args={[0.1, 32, 32]} />\n          <starMaterial />\n        </mesh>\n      ))}\n    </>\n  );\n}\n\n// export default function ExampleComponent() {\n//   const props =  ;\n\n//   return (\n//     <>\n\n//     </>\n//   );\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}