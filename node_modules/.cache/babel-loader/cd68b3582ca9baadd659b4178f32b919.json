{"ast":null,"code":"var _jsxFileName = \"/Users/erachlin/pandemicProject/src/Experience.js\",\n    _s = $RefreshSig$();\n\nimport { OrbitControls, useTexture } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nimport starVertexShader from \"./shaders/vertex.glsl\";\nimport starFragmentShader from \"./shaders/fragment.glsl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Experience() {\n  _s();\n\n  const props = useTexture({\n    map: \"earthMap.jpg\"\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [1, 32, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), [...Array(100)].map(() => /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [(Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10, (Math.random() - 0.5) * 10],\n      children: [/*#__PURE__*/_jsxDEV(PlaneGeometry, {\n        args: [1, 1, 32, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ShaderMaterial, {\n        vertexShader: starVertexShader,\n        fragmentShader: starFragmentShader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s(Experience, \"b2B90cy03dulQ2woqB7nXHKKARo=\", false, function () {\n  return [useTexture];\n});\n\n_c = Experience;\n\nvar _c;\n\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["OrbitControls","useTexture","THREE","TextureLoader","starVertexShader","starFragmentShader","Experience","props","map","Array","Math","random"],"sources":["/Users/erachlin/pandemicProject/src/Experience.js"],"sourcesContent":["import { OrbitControls, useTexture } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport { TextureLoader } from \"three/src/loaders/TextureLoader\";\nimport starVertexShader from \"./shaders/vertex.glsl\";\nimport starFragmentShader from \"./shaders/fragment.glsl\";\n\nexport default function Experience() {\n  const props = useTexture({ map: \"earthMap.jpg\" });\n\n  return (\n    <>\n      <OrbitControls />\n\n      <ambientLight intensity={0.2} />\n      <directionalLight />\n      <mesh>\n        <sphereGeometry args={[1, 32, 32]} />\n        <meshStandardMaterial {...props} />\n      </mesh>\n\n      {[...Array(100)].map(() => (\n        <mesh\n          position={[\n            (Math.random() - 0.5) * 10,\n            (Math.random() - 0.5) * 10,\n            (Math.random() - 0.5) * 10,\n          ]}\n        >\n          <PlaneGeometry args={[1, 1, 32, 32]} />\n          <ShaderMaterial\n            vertexShader={starVertexShader}\n            fragmentShader={starFragmentShader}\n          />\n        </mesh>\n      ))}\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,mBAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;;;AAEA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EACnC,MAAMC,KAAK,GAAGN,UAAU,CAAC;IAAEO,GAAG,EAAE;EAAP,CAAD,CAAxB;EAEA,oBACE;IAAA,wBACE,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAc,SAAS,EAAE;IAAzB;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA,wBACE;QAAgB,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR;MAAtB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,qCAA0BD;MAA1B;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,EAUG,CAAC,GAAGE,KAAK,CAAC,GAAD,CAAT,EAAgBD,GAAhB,CAAoB,mBACnB;MACE,QAAQ,EAAE,CACR,CAACE,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAwB,EADhB,EAER,CAACD,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAwB,EAFhB,EAGR,CAACD,IAAI,CAACC,MAAL,KAAgB,GAAjB,IAAwB,EAHhB,CADZ;MAAA,wBAOE,QAAC,aAAD;QAAe,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,EAAX;MAArB;QAAA;QAAA;QAAA;MAAA,QAPF,eAQE,QAAC,cAAD;QACE,YAAY,EAAEP,gBADhB;QAEE,cAAc,EAAEC;MAFlB;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,CAVH;EAAA,gBADF;AA4BD;;GA/BuBC,U;UACRL,U;;;KADQK,U"},"metadata":{},"sourceType":"module"}